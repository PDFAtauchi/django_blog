name: CI Django Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  quality_code_check:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.8.18]
        poetry-version: [1.6.1]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set Django Secret Key
        env:
          DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: echo "SECRET_KEY=${DJANGO_SECRET_KEY}" >> $GITHUB_ENV
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Image poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies
        run: |
          poetry install
      - name: Run pylint
        run: |
          poetry run pylint_runner --rcfile=.pylintrc
      - name: Run safety
        run: |
          poetry run safety check --full-report
      - name: Run bandit
        run: |
          poetry run bandit --ini .bandit -r -x=**/tests*.py
      - name: Run black
        run: |
          poetry run black . --check  -v --diff --color
      - name: Run isort
        run: poetry run isort . --check-only

  testing_code_coverage:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.8.18]
        poetry-version: [1.6.1]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set Django Secret Key
        env:
          DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: echo "SECRET_KEY=${DJANGO_SECRET_KEY}" >> $GITHUB_ENV
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Image poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies
        run: |
          poetry install
      - name: Run migrations
        run: poetry run python manage.py migrate
      - name: Run tests
        run: poetry run pytest
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
